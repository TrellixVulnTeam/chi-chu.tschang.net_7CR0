<!doctype html>
<html>
  <head>
    <% include partials/head %>
    <script src="https://d3js.org/d3.v5.min.js"></script>
  </head>
  <body>
    <nav>
      <% include partials/header %>
    </nav>
    <div id="content">
      <content>
        <h4>Internet of Things Plant Monitor</h4>
              <p><h5>Moisture</h5><div id="moisture" class="svg-container"></div></p>
              <p><h5>Temperature</h5><div id="temperature" class="svg-container"></div></p>
              <p><h5>Humidity</h5><div id="humidity" class="svg-container"></div></p>

      <h4>Code</h4>
      <div><i class="fab fa-github"></i><font="Gotham-Book"><a href=""> </a></font></div>
      
      </content>
    </div>
  
<script>

//set margins and size of graph
var margin = {top: 10, right: 20, bottom: 20, left: 30},
  height = 200 - margin.top - margin.bottom,
  width = 800 - margin.left - margin.right

//set x-axis range
var x = d3.scaleTime().range([0, width - margin.right])

//set y-axis range
var y = d3.scaleLinear().range([height, 0]);

//draw moisture chart
var svg1 = d3.select("div#moisture").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

//retrieve moisture data in json format from ./projects/plants/moisture
var moistureurl="./moisture"

d3.json(moistureurl).then(function(data){
  
    //format moisture data
    data.forEach(function(d){
      d.time = d3.isoParse(d.time);
      d.value = +d.value;
    })

    //set the ranges of the data
    x.domain(d3.extent(data, function(d) { return d.time;}));
    y.domain([0, d3.max(data, function(d) { return d.value;})]);
  
    //define the line
    var moistureline = d3.line()
      .x(function(d) { return x(d.time); })
      .y(function(d) { return y(d.value); });

    //add path of line 
    svg1.append("path")
      .data([data])
      .attr("class", "moistureline")
      .attr("d", moistureline)
      
    //add x-axis
    svg1.append("g")
      .attr("class","x-axis")
      .attr("transform", "translate(0," + height +")")
      .call(d3.axisBottom(x).ticks(width / 100).tickFormat(d3.timeFormat("%m/%d/%Y")).tickSizeOuter(0));
    
      //add y-axis
    svg1.append("g")
      .attr("class", "y-axis")
      .call(d3.axisLeft(y));

});

//draw temperature chart
var svg2 = d3.select("div#temperature").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

//retrieve temperature data in json format from ./projects/plants/temperature
var temperatureurl="./temperature"

d3.json(temperatureurl).then(function(data){
  
    //format temperature data
    data.forEach(function(d){
      d.time = d3.isoParse(d.time);
      d.value = +d.value;
    })

    //set the ranges of the data
    x.domain(d3.extent(data, function(d) { return d.time;}));
    y.domain([0, d3.max(data, function(d) { return d.value;})]);
  
    //define the line
    var temperatureline = d3.line()
      .x(function(d) { return x(d.time); })
      .y(function(d) { return y(d.value); });

    //add path of line 
    svg2.append("path")
      .data([data])
      .attr("class", "temperatureline")
      .attr("d", temperatureline)
      
    //add x-axis
    svg2.append("g")
      .attr("class","x-axis")
      .attr("transform", "translate(0," + height +")")
      .call(d3.axisBottom(x).ticks(width / 100).tickFormat(d3.timeFormat("%m/%d/%Y")).tickSizeOuter(0));
    
    //add y-axis
    svg2.append("g")
      .attr("class", "y-axis")
      .call(d3.axisLeft(y))
        
    svg2.append("text")
      .attr("x", -22)
      .attr("y", margin.top - 5)
      .attr("dy", 0)
      .attr("class", "y-axis")
      .text("ÂºF");
});


//draw humidity chart
var svg3 = d3.select("div#humidity").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

//retrieve temperature data in json format from ./projects/plants/temperature
var humidityurl="./humidity"

d3.json(humidityurl).then(function(data){
  
    //format temperature data
    data.forEach(function(d){
      d.time = d3.isoParse(d.time);
      d.value = +d.value;
    })

    //set the ranges of the data
    x.domain(d3.extent(data, function(d) { return d.time;}));
    y.domain([0, d3.max(data, function(d) { return d.value;})]);
  
    //define the line
    var humidityline = d3.line()
      .x(function(d) { return x(d.time); })
      .y(function(d) { return y(d.value); });

    //add path of line 
    svg3.append("path")
      .data([data])
      .attr("class", "humidityline")
      .attr("d", humidityline)
      
    //add x-axis
    svg3.append("g")
      .attr("class","x-axis")
      .attr("transform", "translate(0," + height +")")
      .call(d3.axisBottom(x).ticks(width / 100).tickFormat(d3.timeFormat("%m/%d/%Y")).tickSizeOuter(0));
    
    //add y-axis
    svg3.append("g")
      .attr("class", "y-axis")
      .call(d3.axisLeft(y))
        
});
        </script>
      </body>
    <footer><% include partials/footer %></footer>
  </div>
</html>
